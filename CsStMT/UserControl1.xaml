<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	mc:Ignorable="d"
	x:Class="CsStMT.UserControl1"
	x:Name="UserControl" Height="400" Width="400">
    <UserControl.Resources>
        <Style x:Key="ImageButton" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/cmd.ico" Stretch="Fill">
        						<Image.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform/>
        								<RotateTransform Angle="30"/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Image.RenderTransform>
        					</Image>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True"/>
        					<Trigger Property="IsPressed" Value="True"/>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Storyboard x:Key="VSS" RepeatBehavior="Forever">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="LayoutRoot">
        		<EasingDoubleKeyFrame KeyTime="0:0:30" Value="360"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
        	<BeginStoryboard Storyboard="{StaticResource VSS}"/>
        </EventTrigger>
    </UserControl.Triggers>

	<Grid x:Name="LayoutRoot" KeyDown="LayoutRoot_KeyDown" RenderTransformOrigin="0.5,0.5">
		<Grid.RenderTransform>
			<TransformGroup>
				<ScaleTransform/>
				<SkewTransform/>
				<RotateTransform/>
				<TranslateTransform/>
			</TransformGroup>
		</Grid.RenderTransform>
		<Grid HorizontalAlignment="Left" Height="290" VerticalAlignment="Top" Width="290" Margin="55,55,0,0">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MouseEnter">
					<ei:PlaySoundAction Source="error3.wav"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<ed:Arc x:Name="arc" ArcThickness="48" ArcThicknessUnit="Pixel" EndAngle="360" Fill="#FFFDD417" Stretch="None" Stroke="Black" StartAngle="0" Visibility="Hidden"/>
			<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click" SourceName="VSButton">
						<ei:PlaySoundAction Source="Music/enter16.mp3" Volume="0.3"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<Grid.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Grid.RenderTransform>
				<Grid.Effect>
					<ee:MonochromeEffect Color="#FFFDD417"/>
				</Grid.Effect>
				<Image x:Name="ARIAParts3" Margin="109.166,6.125,108.834,243.875" Source="Image/ARiAParts3/ARiAParts3.png" Stretch="Fill" RenderTransformOrigin="0.498,3.472"/>
				<Button x:Name="SkypeButton" Content="" Height="32" Margin="129,248,129,10" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/Skype.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="180"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="EvernoteButton" Content="" Height="32" Margin="248,129,10,129" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="pack://siteoforigin:,,,/Image/Icons/Evernote.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="90"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="GoogleChromeButton" Content="" Height="32" Margin="10,129,248,129" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image Source="Image/Icons/GoogleChrome.ico" Stretch="Fill"/>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="ThunderBirdButton" Content="Button" Height="32" Margin="232.083,71.166,25.916,186.833" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/ThunderBird.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="60"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="CmdButton" Content="Button" Height="32" Margin="190.166,26,67.833,232" Style="{DynamicResource ImageButton}" Width="32"/>
				<Button x:Name="VSButton" Content="Button" Margin="129,10,129,248" Style="{DynamicResource ButtonStyle1}" Click="VSButton_Click">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image Source="Image/Icons/VS2012.ico" Stretch="Fill"/>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ei:ChangePropertyAction PropertyName="Opacity" Value="0.5"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
				<Button x:Name="SteamButton" Content="" Margin="188.5,232.167,69.5,25.833" Style="{DynamicResource ButtonStyle1}">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/steam.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="150"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="WMPButton" Content="" Height="32" Margin="231,188.5,27,69.5" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/wmp.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="120"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="ZoomButton" Content="" Height="32" Margin="70.187,25.999,187.812,232" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/Zoomc.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="-30"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="CloseButton" Content="" Height="32" Margin="28.416,68.833,229.583,189.166" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/Stopc.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="-60"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="IEButton" Content="" Height="32" Margin="26.999,188.166,231,69.833" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/IE.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="-120"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
				<Button x:Name="PaintButton" Content="" Height="32" Margin="69.166,231.833,188.833,26.166" Style="{DynamicResource ButtonStyle1}" Width="32">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid>
											<Image RenderTransformOrigin="0.5,0.5" Source="Image/Icons/paint.ico" Stretch="Fill">
												<Image.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform Angle="-150"/>
														<TranslateTransform/>
													</TransformGroup>
												</Image.RenderTransform>
											</Image>
											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsFocused" Value="True"/>
											<Trigger Property="IsDefaulted" Value="True"/>
											<Trigger Property="IsMouseOver" Value="True"/>
											<Trigger Property="IsPressed" Value="True"/>
											<Trigger Property="IsEnabled" Value="False"/>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Resources>
				</Button>
			</Grid>
		</Grid>
		<Button x:Name="button" Content="Button" HorizontalAlignment="Left" Height="3" Margin="742,-166,-345,0" VerticalAlignment="Top" Width="3"/>
	</Grid>
</UserControl>